diff --git a/node_modules/wechat4u/lib/core.js b/node_modules/wechat4u/lib/core.js
index f58e43c..dff2f0b 100644
--- a/node_modules/wechat4u/lib/core.js
+++ b/node_modules/wechat4u/lib/core.js
@@ -58,6 +58,8 @@ var AlreadyLogoutError = exports.AlreadyLogoutError = function (_Error) {
   return AlreadyLogoutError;
 }(Error);
 
+var CHUNK_SIZE = 0.5 * 1024 * 1024; // 0.5 MB
+
 var WechatCore = function () {
   function WechatCore(data) {
     _classCallCheck(this, WechatCore);
@@ -589,6 +591,88 @@ var WechatCore = function () {
       });
     }
 
+    //根据文件大小切割form
+
+  }, {
+    key: 'getMediaFormStreamData',
+    value: function getMediaFormStreamData(_ref) {
+      var name = _ref.name,
+          data = _ref.data,
+          type = _ref.type,
+          mediatype = _ref.mediatype,
+          size = _ref.size,
+          toUserName = _ref.toUserName;
+
+      var uploadMediaRequest = JSON.stringify({
+        BaseRequest: this.getBaseRequest(),
+        ClientMediaId: (0, _util.getClientMsgId)(),
+        TotalLen: size,
+        StartPos: 0,
+        DataLen: size,
+        MediaType: 4,
+        UploadType: 2,
+        FromUserName: this.user.UserName,
+        ToUserName: toUserName || this.user.UserName
+      });
+
+      // 小于0.5mb的文件直接返回form
+      if (size <= CHUNK_SIZE) {
+
+        var form = new _formData2.default();
+        form.append('name', name);
+        form.append('type', type);
+        form.append('lastModifiedDate', new Date().toGMTString());
+        form.append('size', size);
+        form.append('mediatype', mediatype);
+        form.append('uploadmediarequest', uploadMediaRequest);
+        form.append('webwx_data_ticket', this.PROP.webwxDataTicket);
+        form.append('pass_ticket', encodeURI(this.PROP.passTicket));
+        form.append('filename', data, {
+          filename: name,
+          contentType: type,
+          knownLength: size
+        });
+
+        return form;
+      }
+
+      // 大于0.5mb的文件要切割 chunk 
+      var totalChunksNum = Math.ceil(size / CHUNK_SIZE);
+      var totalChunks = data.length;
+      var formList = [];
+
+      for (var i = 0; i < totalChunksNum; i++) {
+        var startPos = i * CHUNK_SIZE;
+        var endPos = Math.min(size, startPos + CHUNK_SIZE);
+        var chunk = data.slice(startPos, endPos);
+
+        // 创建每个块的 FormData
+        var _form = new _formData2.default();
+        _form.append('name', name);
+        _form.append('type', type);
+        _form.append('lastModifiedDate', new Date().toGMTString());
+        _form.append('size', size);
+        _form.append('mediatype', mediatype);
+        _form.append('uploadmediarequest', uploadMediaRequest);
+        _form.append('webwx_data_ticket', this.PROP.webwxDataTicket);
+        _form.append('pass_ticket', encodeURI(this.PROP.passTicket));
+        _form.append('id', 'WU_FILE_0');
+        _form.append('chunk', i);
+        _form.append('chunks', totalChunksNum);
+        _form.append('filename', chunk, {
+          filename: name,
+          contentType: type,
+          knownLength: chunk.length
+        });
+        formList.push({
+          data: _form,
+          headers: _form.getHeaders()
+        });
+      }
+
+      return formList;
+    }
+
     // file: Stream, Buffer, File, Blob
 
   }, {
@@ -656,48 +740,36 @@ var WechatCore = function () {
               mediatype = 'doc';
           }
 
-          var clientMsgId = (0, _util.getClientMsgId)();
-
-          var uploadMediaRequest = JSON.stringify({
-            BaseRequest: _this15.getBaseRequest(),
-            ClientMediaId: clientMsgId,
-            TotalLen: size,
-            StartPos: 0,
-            DataLen: size,
-            MediaType: 4,
-            UploadType: 2,
-            FromUserName: _this15.user.UserName,
-            ToUserName: toUserName || _this15.user.UserName
-          });
+          var formOrFormList = _this15.getMediaFormStreamData({ name: name, data: data, type: type, mediatype: mediatype, size: size, toUserName: toUserName });
 
-          var form = new _formData2.default();
-          form.append('name', name);
-          form.append('type', type);
-          form.append('lastModifiedDate', new Date().toGMTString());
-          form.append('size', size);
-          form.append('mediatype', mediatype);
-          form.append('uploadmediarequest', uploadMediaRequest);
-          form.append('webwx_data_ticket', _this15.PROP.webwxDataTicket);
-          form.append('pass_ticket', encodeURI(_this15.PROP.passTicket));
-          form.append('filename', data, {
-            filename: name,
-            contentType: type,
-            knownLength: size
-          });
           return new Promise(function (resolve, reject) {
+
             if (_util.isStandardBrowserEnv) {
               return resolve({
-                data: form,
+                data: formOrFormList,
                 headers: {}
               });
+            } else if (Array.isArray(formOrFormList)) {
+              var bufferList = formOrFormList.reduce(function (arr, formObj) {
+                formObj.data.pipe((0, _bl2.default)(function (err, buffer) {
+                  if (err) {
+                    return reject(err);
+                  }
+
+                  arr.push({ data: buffer, headers: formObj.headers });
+                }));
+                return arr;
+              }, []);
+
+              return resolve({ data: bufferList });
             } else {
-              form.pipe((0, _bl2.default)(function (err, buffer) {
+              formOrFormList.pipe((0, _bl2.default)(function (err, buffer) {
                 if (err) {
                   return reject(err);
                 }
                 return resolve({
                   data: buffer,
-                  headers: form.getHeaders()
+                  headers: formOrFormList.getHeaders()
                 });
               }));
             }
@@ -705,15 +777,46 @@ var WechatCore = function () {
         }).then(function (data) {
           var params = {
             f: 'json'
+
+            //单块文件上传
+          };if (!Array.isArray(data.data)) {
+            return _this15.request({
+              method: 'POST',
+              url: _this15.CONF.API_webwxuploadmedia,
+              headers: data.headers,
+              params: params,
+              data: data.data
+            });
+          }
+
+          var bufferList = data.data;
+          var currentChunkIndex = 0;
+
+          //分块上传逻辑
+          var processChunk = function processChunk(res) {
+            if (currentChunkIndex < bufferList.length) {
+              var chunkObj = bufferList[currentChunkIndex];
+              return _this15.request({
+                method: 'POST',
+                url: _this15.CONF.API_webwxuploadmedia,
+                headers: chunkObj.headers,
+                params: params,
+                data: chunkObj.data
+              }).then(function (res) {
+                currentChunkIndex++;
+                // 递归处理下一个块
+                return processChunk(res);
+              });
+            } else {
+              // 所有块上传完成
+              return Promise.resolve({ data: {
+                  MediaId: res.data.MediaId
+                } });
+            }
           };
 
-          return _this15.request({
-            method: 'POST',
-            url: _this15.CONF.API_webwxuploadmedia,
-            headers: data.headers,
-            params: params,
-            data: data.data
-          });
+          // 开始处理第一个块
+          return processChunk();
         }).then(function (res) {
           var data = res.data;
           var mediaId = data.MediaId;
diff --git a/node_modules/wechat4u/lib/core.js.map b/node_modules/wechat4u/lib/core.js.map
index 830c768..1ec94c8 100644
--- a/node_modules/wechat4u/lib/core.js.map
+++ b/node_modules/wechat4u/lib/core.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../src/core.js"],"names":["debug","AlreadyLogoutError","message","constructor","__proto__","prototype","Error","WechatCore","data","PROP","uuid","uin","sid","skey","passTicket","formatedSyncKey","webwxDataTicket","syncKey","List","CONF","COOKIE","user","botData","request","Request","Cookie","Promise","resolve","then","method","url","API_jsLogin","window","QRLogin","eval","res","assert","equal","code","catch","err","tips","params","Date","API_login","notEqual","redirect_uri","match","rediUri","userAvatar","headers","maxRedirects","error","response","status","pm","forEach","test","item","t","now","r","Math","ceil","BaseRequest","getBaseRequest","API_webwxinit","BaseResponse","Ret","SYNCCHECK_RET_LOGOUT","SKey","updateSyncKey","Object","assign","User","to","pass_ticket","lang","API_webwxstatusnotify","seq","API_webwxgetcontact","contacts","length","API_webwxbatchgetcontact","ContactList","text","JSON","stringify","API_webwxreport","API_synccheck","synccheck","ex","retcode","selector","SYNCCHECK_RET_SUCCESS","API_webwxsync","SyncKey","SyncCheckKey","synckeylist","e","o","n","push","join","redirect","type","API_webwxlogout","msg","clientMsgId","MSGTYPE_TEXT","API_webwxsendmsg","id","MSGTYPE_EMOTICON","indexOf","Msg","MediaId","EMoticonMd5","API_webwxsendemoticon","file","filename","toUserName","name","size","ext","mediatype","reject","File","Blob","Buffer","isBuffer","mime","lookup","readable","path","basename","pipe","buffer","toLowerCase","uploadMediaRequest","ClientMediaId","TotalLen","StartPos","DataLen","MediaType","UploadType","FromUserName","UserName","ToUserName","form","FormData","append","toGMTString","encodeURI","contentType","knownLength","isStandardBrowserEnv","getHeaders","f","API_webwxuploadmedia","mediaId","ok","MSGTYPE_IMAGE","API_webwxsendmsgimg","MSGTYPE_VIDEO","API_webwxsendmsgvedio","APPMSGTYPE_ATTACH","API_webwxsendappmsg","MsgType","Content","replace","SubMsgType","MSGTYPE_LOCATION","Type","OriContent","fun","EmojiFlag","Scene","MSGTYPE_MICROVIDEO","MSGTYPE_APP","AppMsgType","msgId","MsgID","API_webwxgetmsgimg","responseType","API_webwxgetvideo","API_webwxgetvoice","HeadImgUrl","origin","FileName","sender","mediaid","fromuser","webwx_data_ticket","API_webwxdownloadmedia","Ticket","API_webwxverifyuser","content","NickName","Topic","MemberList","MemberCount","API_webwxcreatechatroom","ChatRoomUserName","ChatRoomName","AddMemberList","toString","DelMemberList","InviteMemberList","API_webwxupdatechatroom","OP","RemarkName","CmdId","API_webwxoplog","NewName","NewTopic","SvrMsgId","ClientMsgId","API_webwxrevokemsg","Uin","parseInt","Sid","Skey","DeviceID","keys","key"],"mappings":"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","file":"core.js","sourcesContent":["import path from 'path'\nimport bl from 'bl'\nimport _debug from 'debug'\nimport FormData from 'form-data'\nimport mime from 'mime'\nimport {\n  getCONF,\n  Request,\n  isStandardBrowserEnv,\n  assert,\n  getClientMsgId,\n  getDeviceID\n} from './util'\n\nconst debug = _debug('core')\nexport class AlreadyLogoutError extends Error {\n  constructor (message = 'already logout') {\n    super(message)\n    // fuck the babel\n    this.constructor = AlreadyLogoutError\n    this.__proto__ = AlreadyLogoutError.prototype\n  }\n}\n\nexport default class WechatCore {\n  constructor (data) {\n    this.PROP = {\n      uuid: '',\n      uin: '',\n      sid: '',\n      skey: '',\n      passTicket: '',\n      formatedSyncKey: '',\n      webwxDataTicket: '',\n      syncKey: {\n        List: []\n      }\n    }\n    this.CONF = getCONF()\n    this.COOKIE = {}\n    this.user = {}\n    if (data) {\n      this.botData = data\n    }\n\n    this.request = new Request({\n      Cookie: this.COOKIE\n    })\n  }\n\n  get botData () {\n    return {\n      PROP: this.PROP,\n      CONF: this.CONF,\n      COOKIE: this.COOKIE,\n      user: this.user\n    }\n  }\n\n  set botData (data) {\n    Object.keys(data).forEach(key => {\n      Object.assign(this[key], data[key])\n    })\n  }\n\n  getUUID () {\n    return Promise.resolve().then(() => {\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_jsLogin\n      }).then(res => {\n        let window = {\n          QRLogin: {}\n        }\n        // res.data: \"window.QRLogin.code = xxx; ...\"\n        // eslint-disable-next-line\n        eval(res.data)\n        assert.equal(window.QRLogin.code, 200, res)\n\n        this.PROP.uuid = window.QRLogin.uuid\n        return window.QRLogin.uuid\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取UUID失败'\n      throw err\n    })\n  }\n\n  checkLogin () {\n    return Promise.resolve().then(() => {\n      let params = {\n        'tip': 0,\n        'uuid': this.PROP.uuid,\n        'loginicon': true,\n        'r': ~new Date()\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_login,\n        params: params\n      }).then(res => {\n        let window = {}\n\n        // eslint-disable-next-line\n        eval(res.data)\n\n        assert.notEqual(window.code, 400, res)\n\n        if (window.code === 200) {\n          this.CONF = getCONF(window.redirect_uri.match(/(?:\\w+\\.)+\\w+/)[0])\n          this.rediUri = window.redirect_uri\n        } else if (window.code === 201 && window.userAvatar) {\n          // this.user.userAvatar = window.userAvatar\n        }\n        return window\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取手机确认登录信息失败'\n      throw err\n    })\n  }\n\n  login () {\n    return Promise.resolve().then(() => {\n      let headers = {}\n      headers['User-Agent'] = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36'\n      headers['client-version'] = '2.0.0'\n      headers['referer'] = 'https://wx.qq.com/?&lang=zh_CN&target=t'\n      headers['extspam'] = 'Go8FCIkFEokFCggwMDAwMDAwMRAGGvAESySibk50w5Wb3uTl2c2h64jVVrV7gNs06GFlWplHQbY/5FfiO++1yH4ykCyNPWKXmco+wfQzK5R98D3so7rJ5LmGFvBLjGceleySrc3SOf2Pc1gVehzJgODeS0lDL3/I/0S2SSE98YgKleq6Uqx6ndTy9yaL9qFxJL7eiA/R3SEfTaW1SBoSITIu+EEkXff+Pv8NHOk7N57rcGk1w0ZzRrQDkXTOXFN2iHYIzAAZPIOY45Lsh+A4slpgnDiaOvRtlQYCt97nmPLuTipOJ8Qc5pM7ZsOsAPPrCQL7nK0I7aPrFDF0q4ziUUKettzW8MrAaiVfmbD1/VkmLNVqqZVvBCtRblXb5FHmtS8FxnqCzYP4WFvz3T0TcrOqwLX1M/DQvcHaGGw0B0y4bZMs7lVScGBFxMj3vbFi2SRKbKhaitxHfYHAOAa0X7/MSS0RNAjdwoyGHeOepXOKY+h3iHeqCvgOH6LOifdHf/1aaZNwSkGotYnYScW8Yx63LnSwba7+hESrtPa/huRmB9KWvMCKbDThL/nne14hnL277EDCSocPu3rOSYjuB9gKSOdVmWsj9Dxb/iZIe+S6AiG29Esm+/eUacSba0k8wn5HhHg9d4tIcixrxveflc8vi2/wNQGVFNsGO6tB5WF0xf/plngOvQ1/ivGV/C1Qpdhzznh0ExAVJ6dwzNg7qIEBaw+BzTJTUuRcPk92Sn6QDn2Pu3mpONaEumacjW4w6ipPnPw+g2TfywJjeEcpSZaP4Q3YV5HG8D6UjWA4GSkBKculWpdCMadx0usMomsSS/74QgpYqcPkmamB4nVv1JxczYITIqItIKjD35IGKAUwAA=='\n      return this.request({\n        method: 'GET',\n        url: this.rediUri,\n        maxRedirects: 0,\n        headers: headers\n      }).then(res => {\n\n      }).catch(error => {\n        if (error.response.status === 301) {\n          let data = error.response.data\n          let pm = data.match(/<ret>(.*)<\\/ret>/)\n          if (pm && pm[1] === '0') {\n            this.PROP.skey = data.match(/<skey>(.*)<\\/skey>/)[1]\n            this.PROP.sid = data.match(/<wxsid>(.*)<\\/wxsid>/)[1]\n            this.PROP.uin = data.match(/<wxuin>(.*)<\\/wxuin>/)[1]\n            this.PROP.passTicket = data.match(/<pass_ticket>(.*)<\\/pass_ticket>/)[1]\n          }\n          if (error.response.headers['set-cookie']) {\n            error.response.headers['set-cookie'].forEach(item => {\n              if (/webwx.*?data.*?ticket/i.test(item)) {\n                this.PROP.webwxDataTicket = item.match(/=(.*?);/)[1]\n              } else if (/wxuin/i.test(item)) {\n                this.PROP.uin = item.match(/=(.*?);/)[1]\n              } else if (/wxsid/i.test(item)) {\n                this.PROP.sid = item.match(/=(.*?);/)[1]\n              } else if (/pass_ticket/i.test(item)) {\n                this.PROP.passTicket = item.match(/=(.*?);/)[1]\n              }\n            })\n          }\n        } else {\n          throw error\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '登录失败'\n      throw err\n    })\n  }\n\n  init () {\n    return Promise.resolve().then(() => {\n      let t = Date.now()\n      let r = t / -1579\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'r': Math.ceil(r)\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxinit,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        if (data.BaseResponse.Ret == this.CONF.SYNCCHECK_RET_LOGOUT) {\n          throw new AlreadyLogoutError()\n        }\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        this.PROP.skey = data.SKey || this.PROP.skey\n        this.updateSyncKey(data)\n        Object.assign(this.user, data.User)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '微信初始化失败'\n      throw err\n    })\n  }\n\n  notifyMobile (to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket,\n        lang: 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Code': to ? 1 : 3,\n        'FromUserName': this.user['UserName'],\n        'ToUserName': to || this.user['UserName'],\n        'ClientMsgId': Date.now()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxstatusnotify,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '手机状态通知失败'\n      throw err\n    })\n  }\n\n  getContact (seq = 0) {\n    return Promise.resolve().then(() => {\n      let params = {\n        // 'pass_ticket': this.PROP.passTicket,\n        'seq': seq,\n        'skey': this.PROP.skey,\n        'r': +new Date()\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetcontact,\n        params: params\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取通讯录失败'\n      throw err\n    })\n  }\n\n  batchGetContact (contacts) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'type': 'ex',\n        'r': +new Date(),\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Count': contacts.length,\n        'List': contacts\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxbatchgetcontact,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n\n        return data.ContactList\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '批量获取联系人失败'\n      throw err\n    })\n  }\n\n  statReport (text) {\n    return Promise.resolve().then(() => {\n      text = text || {\n        'type': '[action-record]',\n        'data': {\n          'actions': [{\n            'type': 'click',\n            'action': '发送框',\n            'time': +new Date()\n          }]\n        }\n      }\n      text = JSON.stringify(text)\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'new',\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Count': 1,\n        'List': [{\n          'Text': text,\n          'Type': 1\n        }]\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxreport,\n        params: params,\n        data: data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '状态报告失败'\n      throw err\n    })\n  }\n\n  syncCheck () {\n    return Promise.resolve().then(() => {\n      let params = {\n        'r': +new Date(),\n        'sid': this.PROP.sid,\n        'uin': this.PROP.uin,\n        'skey': this.PROP.skey,\n        'deviceid': getDeviceID(),\n        'synckey': this.PROP.formatedSyncKey\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_synccheck,\n        params: params\n      }).then(res => {\n        let window = {\n          synccheck: {}\n        }\n\n        try {\n          // eslint-disable-next-line\n          eval(res.data)\n        } catch (ex) {\n          window.synccheck = { retcode: '0', selector: '0' }\n        }\n        if (window.synccheck.retcode == this.CONF.SYNCCHECK_RET_LOGOUT) {\n          throw new AlreadyLogoutError()\n        }\n        assert.equal(window.synccheck.retcode, this.CONF.SYNCCHECK_RET_SUCCESS, res)\n        return window.synccheck.selector\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '同步失败'\n      throw err\n    })\n  }\n\n  sync () {\n    return Promise.resolve().then(() => {\n      let params = {\n        'sid': this.PROP.sid,\n        'skey': this.PROP.skey,\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'SyncKey': this.PROP.syncKey,\n        'rr': ~new Date()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsync,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        if (data.BaseResponse.Ret == this.CONF.SYNCCHECK_RET_LOGOUT) {\n          throw new AlreadyLogoutError()\n        }\n        assert.equal(data.BaseResponse.Ret, 0, res)\n\n        this.updateSyncKey(data)\n        this.PROP.skey = data.SKey || this.PROP.skey\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取新信息失败'\n      throw err\n    })\n  }\n\n  updateSyncKey (data) {\n    if (data.SyncKey) {\n      this.PROP.syncKey = data.SyncKey\n    }\n    if (data.SyncCheckKey) {\n      let synckeylist = []\n      for (let e = data.SyncCheckKey.List, o = 0, n = e.length; n > o; o++) {\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\n      }\n      this.PROP.formatedSyncKey = synckeylist.join('|')\n    } else if (!this.PROP.formatedSyncKey && data.SyncKey) {\n      let synckeylist = []\n      for (let e = data.SyncKey.List, o = 0, n = e.length; n > o; o++) {\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\n      }\n      this.PROP.formatedSyncKey = synckeylist.join('|')\n    }\n  }\n\n  logout () {\n    return Promise.resolve().then(() => {\n      let params = {\n        redirect: 1,\n        type: 0,\n        skey: this.PROP.skey,\n        lang: 'zh_CN'\n      }\n\n      // data加上会出错，不加data也能登出\n      // let data = {\n      //   sid: this.PROP.sid,\n      //   uin: this.PROP.uin\n      // }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxlogout,\n        params: params\n      }).then(res => {\n        return '登出成功'\n      }).catch(err => {\n        debug(err)\n        return '可能登出成功'\n      })\n    })\n  }\n\n  sendText (msg, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_TEXT,\n          'Content': msg,\n          'FromUserName': this.user['UserName'],\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送文本信息失败'\n      throw err\n    })\n  }\n\n  sendEmoticon (id, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'fun': 'sys',\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_EMOTICON,\n          'EmojiFlag': 2,\n          'FromUserName': this.user['UserName'],\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n\n      if (id.indexOf('@') === 0) {\n        data.Msg.MediaId = id\n      } else {\n        data.Msg.EMoticonMd5 = id\n      }\n\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendemoticon,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送表情信息失败'\n      throw err\n    })\n  }\n\n  // file: Stream, Buffer, File, Blob\n  uploadMedia (file, filename, toUserName) {\n    return Promise.resolve().then(() => {\n      let name, type, size, ext, mediatype, data\n      return new Promise((resolve, reject) => {\n        if ((typeof (File) !== 'undefined' && file.constructor == File) ||\n          (typeof (Blob) !== 'undefined' && file.constructor == Blob)) {\n          name = file.name || 'file'\n          type = file.type\n          size = file.size\n          data = file\n          return resolve()\n        } else if (Buffer.isBuffer(file)) {\n          if (!filename) {\n            return reject(new Error('文件名未知'))\n          }\n          name = filename\n          type = mime.lookup(name)\n          size = file.length\n          data = file\n          return resolve()\n        } else if (file.readable) {\n          if (!file.path && !filename) {\n            return reject(new Error('文件名未知'))\n          }\n          name = path.basename(file.path || filename)\n          type = mime.lookup(name)\n          file.pipe(bl((err, buffer) => {\n            if (err) {\n              return reject(err)\n            }\n            size = buffer.length\n            data = buffer\n            return resolve()\n          }))\n        }\n      }).then(() => {\n        ext = name.match(/.*\\.(.*)/)\n        if (ext) {\n          ext = ext[1].toLowerCase()\n        } else {\n          ext = ''\n        }\n\n        switch (ext) {\n          case 'bmp':\n          case 'jpeg':\n          case 'jpg':\n          case 'png':\n            mediatype = 'pic'\n            break\n          case 'mp4':\n            mediatype = 'video'\n            break\n          default:\n            mediatype = 'doc'\n        }\n\n        let clientMsgId = getClientMsgId()\n\n        let uploadMediaRequest = JSON.stringify({\n          BaseRequest: this.getBaseRequest(),\n          ClientMediaId: clientMsgId,\n          TotalLen: size,\n          StartPos: 0,\n          DataLen: size,\n          MediaType: 4,\n          UploadType: 2,\n          FromUserName: this.user.UserName,\n          ToUserName: toUserName || this.user.UserName\n        })\n\n        let form = new FormData()\n        form.append('name', name)\n        form.append('type', type)\n        form.append('lastModifiedDate', new Date().toGMTString())\n        form.append('size', size)\n        form.append('mediatype', mediatype)\n        form.append('uploadmediarequest', uploadMediaRequest)\n        form.append('webwx_data_ticket', this.PROP.webwxDataTicket)\n        form.append('pass_ticket', encodeURI(this.PROP.passTicket))\n        form.append('filename', data, {\n          filename: name,\n          contentType: type,\n          knownLength: size\n        })\n        return new Promise((resolve, reject) => {\n          if (isStandardBrowserEnv) {\n            return resolve({\n              data: form,\n              headers: {}\n            })\n          } else {\n            form.pipe(bl((err, buffer) => {\n              if (err) {\n                return reject(err)\n              }\n              return resolve({\n                data: buffer,\n                headers: form.getHeaders()\n              })\n            }))\n          }\n        })\n      }).then(data => {\n        let params = {\n          f: 'json'\n        }\n\n        return this.request({\n          method: 'POST',\n          url: this.CONF.API_webwxuploadmedia,\n          headers: data.headers,\n          params: params,\n          data: data.data\n        })\n      }).then(res => {\n        let data = res.data\n        let mediaId = data.MediaId\n        assert.ok(mediaId, res)\n\n        return {\n          name: name,\n          size: size,\n          ext: ext,\n          mediatype: mediatype,\n          mediaId: mediaId\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '上传媒体文件失败'\n      throw err\n    })\n  }\n\n  sendPic (mediaId, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_IMAGE,\n          'MediaId': mediaId,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsgimg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送图片失败'\n      throw err\n    })\n  }\n\n  sendVideo (mediaId, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_VIDEO,\n          'MediaId': mediaId,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsgvedio,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送视频失败'\n      throw err\n    })\n  }\n\n  sendDoc (mediaId, name, size, ext, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.APPMSGTYPE_ATTACH,\n          'Content': `<appmsg appid='wxeb7ec651dd0aefa9' sdkver=''><title>${name}</title><des></des><action></action><type>6</type><content></content><url></url><lowurl></lowurl><appattach><totallen>${size}</totallen><attachid>${mediaId}</attachid><fileext>${ext}</fileext></appattach><extinfo></extinfo></appmsg>`,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendappmsg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送文件失败'\n      throw err\n    })\n  }\n\n  forwardMsg (msg, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 2,\n        'Msg': {\n          'Type': msg.MsgType,\n          'MediaId': '',\n          'Content': msg.Content.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/^.*:\\n/, ''),\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      let url, pm\n      switch (msg.MsgType) {\n        case this.CONF.MSGTYPE_TEXT:\n          url = this.CONF.API_webwxsendmsg\n          if (msg.SubMsgType === this.CONF.MSGTYPE_LOCATION) {\n            data.Msg.Type = this.CONF.MSGTYPE_LOCATION\n            data.Msg.Content = msg.OriContent.replace(/&lt;/g, '<').replace(/&gt;/g, '>')\n          }\n          break\n        case this.CONF.MSGTYPE_IMAGE:\n          url = this.CONF.API_webwxsendmsgimg\n          break\n        case this.CONF.MSGTYPE_EMOTICON:\n          url = this.CONF.API_webwxsendemoticon\n          params.fun = 'sys'\n          data.Msg.EMoticonMd5 = msg.Content.replace(/^[\\s\\S]*?md5\\s?=\\s?\"(.*?)\"[\\s\\S]*?$/, '$1')\n          if (!data.Msg.EMoticonMd5) {\n            throw new Error('商店表情不能转发')\n          }\n          data.Msg.EmojiFlag = 2\n          data.Scene = 0\n          delete data.Msg.MediaId\n          delete data.Msg.Content\n          break\n        case this.CONF.MSGTYPE_MICROVIDEO:\n        case this.CONF.MSGTYPE_VIDEO:\n          url = this.CONF.API_webwxsendmsgvedio\n          data.Msg.Type = this.CONF.MSGTYPE_VIDEO\n          break\n        case this.CONF.MSGTYPE_APP:\n          url = this.CONF.API_webwxsendappmsg\n          data.Msg.Type = msg.AppMsgType\n          data.Msg.Content = data.Msg.Content.replace(\n            /^[\\s\\S]*?(<appmsg[\\s\\S]*?<attachid>)[\\s\\S]*?(<\\/attachid>[\\s\\S]*?<\\/appmsg>)[\\s\\S]*?$/,\n            `$1${msg.MediaId}$2`)\n          break\n        default:\n          throw new Error('该消息类型不能直接转发')\n      }\n      return this.request({\n        method: 'POST',\n        url: url,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '转发消息失败'\n      throw err\n    })\n  }\n\n  getMsgImg (msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey,\n        type: 'big'\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetmsgimg,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取图片或表情失败'\n      throw err\n    })\n  }\n\n  getVideo (msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetvideo,\n        headers: {\n          'Range': 'bytes=0-'\n        },\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取视频失败'\n      throw err\n    })\n  }\n\n  getVoice (msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetvoice,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取声音失败'\n      throw err\n    })\n  }\n\n  getHeadImg (HeadImgUrl) {\n    return Promise.resolve().then(() => {\n      let url = this.CONF.origin + HeadImgUrl\n      return this.request({\n        method: 'GET',\n        url: url,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取头像失败'\n      throw err\n    })\n  }\n\n  getDoc (FromUserName, MediaId, FileName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        sender: FromUserName,\n        mediaid: MediaId,\n        filename: FileName,\n        fromuser: this.user.UserName,\n        pass_ticket: this.PROP.passTicket,\n        webwx_data_ticket: this.PROP.webwxDataTicket\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxdownloadmedia,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取文件失败'\n      throw err\n    })\n  }\n\n  verifyUser (UserName, Ticket) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Opcode': 3,\n        'VerifyUserListSize': 1,\n        'VerifyUserList': [{\n          'Value': UserName,\n          'VerifyUserTicket': Ticket\n        }],\n        'VerifyContent': '',\n        'SceneListCount': 1,\n        'SceneList': [33],\n        'skey': this.PROP.skey\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxverifyuser,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '通过好友请求失败'\n      throw err\n    })\n  }\n\n  /**\n   * 添加好友\n   * @param UserName 待添加用户的UserName\n   * @param content\n   * @returns {Promise.<TResult>}\n   */\n  addFriend (UserName, content = '我是' + this.user.NickName) {\n    let params = {\n      'pass_ticket': this.PROP.passTicket,\n      'lang': 'zh_CN'\n    }\n\n    let data = {\n      'BaseRequest': this.getBaseRequest(),\n      'Opcode': 2,\n      'VerifyUserListSize': 1,\n      'VerifyUserList': [{\n        'Value': UserName,\n        'VerifyUserTicket': ''\n      }],\n      'VerifyContent': content,\n      'SceneListCount': 1,\n      'SceneList': [33],\n      'skey': this.PROP.skey\n    }\n\n    return this.request({\n      method: 'POST',\n      url: this.CONF.API_webwxverifyuser,\n      params: params,\n      data: data\n    }).then(res => {\n      let data = res.data\n      assert.equal(data.BaseResponse.Ret, 0, res)\n      return data\n    }).catch(err => {\n      debug(err)\n      err.tips = '添加好友失败'\n      throw err\n    })\n  }\n\n  // Topic: Chatroom name\n  // MemberList format:\n  // [\n  //   {\"UserName\":\"@250d8d156ad9f8b068c2e3df3464ecf2\"},\n  //   {\"UserName\":\"@42d725733741de6ac53cbe3738d8dd2e\"}\n  // ]\n  createChatroom (Topic, MemberList) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN',\n        'r': ~new Date()\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        MemberCount: MemberList.length,\n        MemberList: MemberList,\n        Topic: Topic\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxcreatechatroom,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '创建群失败'\n      throw err\n    })\n  }\n\n  // fun: 'addmember' or 'delmember' or 'invitemember'\n  updateChatroom (ChatRoomUserName, MemberList, fun) {\n    return Promise.resolve().then(() => {\n      let params = {\n        fun: fun\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        ChatRoomName: ChatRoomUserName\n      }\n      if (fun === 'addmember') {\n        data.AddMemberList = MemberList.toString()\n      } else if (fun === 'delmember') {\n        data.DelMemberList = MemberList.toString()\n      } else if (fun === 'invitemember') {\n        data.InviteMemberList = MemberList.toString()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxupdatechatroom,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '邀请或踢出群成员失败'\n      throw err\n    })\n  }\n\n  // OP: 1 联系人置顶 0 取消置顶\n  // 若不传RemarkName，则会覆盖以设置的联系人备注名\n  opLog (UserName, OP, RemarkName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        CmdId: 3,\n        OP: OP,\n        RemarkName: RemarkName,\n        UserName: UserName\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxoplog,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '置顶或取消置顶失败'\n      throw err\n    })\n  }\n\n  updateRemarkName (UserName, RemarkName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        CmdId: 2,\n        RemarkName: RemarkName,\n        UserName: UserName\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxoplog,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '设置用户标签失败'\n      throw err\n    })\n  }\n\n  updateChatRoomName (ChatRoomUserName, NewName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'fun': 'modtopic'\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        ChatRoomName: ChatRoomUserName,\n        NewTopic: NewName\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxupdatechatroom,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('更新群名失败')\n    })\n  }\n\n  revokeMsg (msgId, toUserName) {\n    return Promise.resolve().then(() => {\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        SvrMsgId: msgId,\n        ToUserName: toUserName,\n        ClientMsgId: getClientMsgId()\n      }\n      let headers = {}\n      headers['ContentType'] = 'application/json; charset=UTF-8'\n      headers['User-Agent'] = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36'\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxrevokemsg,\n        data: data,\n        headers: headers\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('撤回消息失败')\n    })\n  }\n\n  getBaseRequest () {\n    return {\n      Uin: parseInt(this.PROP.uin),\n      Sid: this.PROP.sid,\n      Skey: this.PROP.skey,\n      DeviceID: getDeviceID()\n    }\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"sources":["../src/core.js"],"names":["debug","AlreadyLogoutError","message","constructor","__proto__","prototype","Error","CHUNK_SIZE","WechatCore","data","PROP","uuid","uin","sid","skey","passTicket","formatedSyncKey","webwxDataTicket","syncKey","List","CONF","COOKIE","user","botData","request","Request","Cookie","Promise","resolve","then","method","url","API_jsLogin","window","QRLogin","eval","res","assert","equal","code","catch","err","tips","params","Date","API_login","notEqual","redirect_uri","match","rediUri","userAvatar","headers","maxRedirects","error","response","status","pm","forEach","test","item","t","now","r","Math","ceil","BaseRequest","getBaseRequest","API_webwxinit","BaseResponse","Ret","SYNCCHECK_RET_LOGOUT","SKey","updateSyncKey","Object","assign","User","to","pass_ticket","lang","API_webwxstatusnotify","seq","API_webwxgetcontact","contacts","length","API_webwxbatchgetcontact","ContactList","text","JSON","stringify","API_webwxreport","API_synccheck","synccheck","ex","retcode","selector","SYNCCHECK_RET_SUCCESS","API_webwxsync","SyncKey","SyncCheckKey","synckeylist","e","o","n","push","join","redirect","type","API_webwxlogout","msg","clientMsgId","MSGTYPE_TEXT","API_webwxsendmsg","id","MSGTYPE_EMOTICON","indexOf","Msg","MediaId","EMoticonMd5","API_webwxsendemoticon","name","mediatype","size","toUserName","uploadMediaRequest","ClientMediaId","TotalLen","StartPos","DataLen","MediaType","UploadType","FromUserName","UserName","ToUserName","form","FormData","append","toGMTString","encodeURI","filename","contentType","knownLength","totalChunksNum","totalChunks","formList","i","startPos","endPos","min","chunk","slice","getHeaders","file","ext","reject","File","Blob","Buffer","isBuffer","mime","lookup","readable","path","basename","pipe","buffer","toLowerCase","formOrFormList","getMediaFormStreamData","isStandardBrowserEnv","Array","isArray","bufferList","reduce","arr","formObj","f","API_webwxuploadmedia","currentChunkIndex","processChunk","chunkObj","mediaId","ok","MSGTYPE_IMAGE","API_webwxsendmsgimg","MSGTYPE_VIDEO","API_webwxsendmsgvedio","APPMSGTYPE_ATTACH","API_webwxsendappmsg","MsgType","Content","replace","SubMsgType","MSGTYPE_LOCATION","Type","OriContent","fun","EmojiFlag","Scene","MSGTYPE_MICROVIDEO","MSGTYPE_APP","AppMsgType","msgId","MsgID","API_webwxgetmsgimg","responseType","API_webwxgetvideo","API_webwxgetvoice","HeadImgUrl","origin","FileName","sender","mediaid","fromuser","webwx_data_ticket","API_webwxdownloadmedia","Ticket","API_webwxverifyuser","content","NickName","Topic","MemberList","MemberCount","API_webwxcreatechatroom","ChatRoomUserName","ChatRoomName","AddMemberList","toString","DelMemberList","InviteMemberList","API_webwxupdatechatroom","OP","RemarkName","CmdId","API_webwxoplog","NewName","NewTopic","SvrMsgId","ClientMsgId","API_webwxrevokemsg","Uin","parseInt","Sid","Skey","DeviceID","keys","key"],"mappings":"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","file":"core.js","sourcesContent":["import path from 'path'\nimport bl from 'bl'\nimport _debug from 'debug'\nimport FormData from 'form-data'\nimport mime from 'mime'\nimport {\n  getCONF,\n  Request,\n  isStandardBrowserEnv,\n  assert,\n  getClientMsgId,\n  getDeviceID\n} from './util'\n\nconst debug = _debug('core')\nexport class AlreadyLogoutError extends Error {\n  constructor(message = 'already logout') {\n    super(message)\n    // fuck the babel\n    this.constructor = AlreadyLogoutError\n    this.__proto__ = AlreadyLogoutError.prototype\n  }\n}\nconst CHUNK_SIZE = 0.5 * 1024 * 1024; // 0.5 MB\nexport default class WechatCore {\n  constructor(data) {\n    this.PROP = {\n      uuid: '',\n      uin: '',\n      sid: '',\n      skey: '',\n      passTicket: '',\n      formatedSyncKey: '',\n      webwxDataTicket: '',\n      syncKey: {\n        List: []\n      }\n    }\n    this.CONF = getCONF()\n    this.COOKIE = {}\n    this.user = {}\n    if (data) {\n      this.botData = data\n    }\n\n    this.request = new Request({\n      Cookie: this.COOKIE\n    })\n  }\n\n  get botData() {\n    return {\n      PROP: this.PROP,\n      CONF: this.CONF,\n      COOKIE: this.COOKIE,\n      user: this.user\n    }\n  }\n\n  set botData(data) {\n    Object.keys(data).forEach(key => {\n      Object.assign(this[key], data[key])\n    })\n  }\n\n  getUUID() {\n    return Promise.resolve().then(() => {\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_jsLogin\n      }).then(res => {\n        let window = {\n          QRLogin: {}\n        }\n        // res.data: \"window.QRLogin.code = xxx; ...\"\n        // eslint-disable-next-line\n        eval(res.data)\n        assert.equal(window.QRLogin.code, 200, res)\n\n        this.PROP.uuid = window.QRLogin.uuid\n        return window.QRLogin.uuid\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取UUID失败'\n      throw err\n    })\n  }\n\n  checkLogin() {\n    return Promise.resolve().then(() => {\n      let params = {\n        'tip': 0,\n        'uuid': this.PROP.uuid,\n        'loginicon': true,\n        'r': ~new Date()\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_login,\n        params: params\n      }).then(res => {\n        let window = {}\n\n        // eslint-disable-next-line\n        eval(res.data)\n\n        assert.notEqual(window.code, 400, res)\n\n        if (window.code === 200) {\n          this.CONF = getCONF(window.redirect_uri.match(/(?:\\w+\\.)+\\w+/)[0])\n          this.rediUri = window.redirect_uri\n        } else if (window.code === 201 && window.userAvatar) {\n          // this.user.userAvatar = window.userAvatar\n        }\n        return window\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取手机确认登录信息失败'\n      throw err\n    })\n  }\n\n  login() {\n    return Promise.resolve().then(() => {\n      let headers = {}\n      headers['User-Agent'] = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36'\n      headers['client-version'] = '2.0.0'\n      headers['referer'] = 'https://wx.qq.com/?&lang=zh_CN&target=t'\n      headers['extspam'] = 'Go8FCIkFEokFCggwMDAwMDAwMRAGGvAESySibk50w5Wb3uTl2c2h64jVVrV7gNs06GFlWplHQbY/5FfiO++1yH4ykCyNPWKXmco+wfQzK5R98D3so7rJ5LmGFvBLjGceleySrc3SOf2Pc1gVehzJgODeS0lDL3/I/0S2SSE98YgKleq6Uqx6ndTy9yaL9qFxJL7eiA/R3SEfTaW1SBoSITIu+EEkXff+Pv8NHOk7N57rcGk1w0ZzRrQDkXTOXFN2iHYIzAAZPIOY45Lsh+A4slpgnDiaOvRtlQYCt97nmPLuTipOJ8Qc5pM7ZsOsAPPrCQL7nK0I7aPrFDF0q4ziUUKettzW8MrAaiVfmbD1/VkmLNVqqZVvBCtRblXb5FHmtS8FxnqCzYP4WFvz3T0TcrOqwLX1M/DQvcHaGGw0B0y4bZMs7lVScGBFxMj3vbFi2SRKbKhaitxHfYHAOAa0X7/MSS0RNAjdwoyGHeOepXOKY+h3iHeqCvgOH6LOifdHf/1aaZNwSkGotYnYScW8Yx63LnSwba7+hESrtPa/huRmB9KWvMCKbDThL/nne14hnL277EDCSocPu3rOSYjuB9gKSOdVmWsj9Dxb/iZIe+S6AiG29Esm+/eUacSba0k8wn5HhHg9d4tIcixrxveflc8vi2/wNQGVFNsGO6tB5WF0xf/plngOvQ1/ivGV/C1Qpdhzznh0ExAVJ6dwzNg7qIEBaw+BzTJTUuRcPk92Sn6QDn2Pu3mpONaEumacjW4w6ipPnPw+g2TfywJjeEcpSZaP4Q3YV5HG8D6UjWA4GSkBKculWpdCMadx0usMomsSS/74QgpYqcPkmamB4nVv1JxczYITIqItIKjD35IGKAUwAA=='\n      return this.request({\n        method: 'GET',\n        url: this.rediUri,\n        maxRedirects: 0,\n        headers: headers\n      }).then(res => {\n\n      }).catch(error => {\n        if (error.response.status === 301) {\n          let data = error.response.data\n          let pm = data.match(/<ret>(.*)<\\/ret>/)\n          if (pm && pm[1] === '0') {\n            this.PROP.skey = data.match(/<skey>(.*)<\\/skey>/)[1]\n            this.PROP.sid = data.match(/<wxsid>(.*)<\\/wxsid>/)[1]\n            this.PROP.uin = data.match(/<wxuin>(.*)<\\/wxuin>/)[1]\n            this.PROP.passTicket = data.match(/<pass_ticket>(.*)<\\/pass_ticket>/)[1]\n          }\n          if (error.response.headers['set-cookie']) {\n            error.response.headers['set-cookie'].forEach(item => {\n              if (/webwx.*?data.*?ticket/i.test(item)) {\n                this.PROP.webwxDataTicket = item.match(/=(.*?);/)[1]\n              } else if (/wxuin/i.test(item)) {\n                this.PROP.uin = item.match(/=(.*?);/)[1]\n              } else if (/wxsid/i.test(item)) {\n                this.PROP.sid = item.match(/=(.*?);/)[1]\n              } else if (/pass_ticket/i.test(item)) {\n                this.PROP.passTicket = item.match(/=(.*?);/)[1]\n              }\n            })\n          }\n        } else {\n          throw error\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '登录失败'\n      throw err\n    })\n  }\n\n  init() {\n    return Promise.resolve().then(() => {\n      let t = Date.now()\n      let r = t / -1579\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'r': Math.ceil(r)\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxinit,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        if (data.BaseResponse.Ret == this.CONF.SYNCCHECK_RET_LOGOUT) {\n          throw new AlreadyLogoutError()\n        }\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        this.PROP.skey = data.SKey || this.PROP.skey\n        this.updateSyncKey(data)\n        Object.assign(this.user, data.User)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '微信初始化失败'\n      throw err\n    })\n  }\n\n  notifyMobile(to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket,\n        lang: 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Code': to ? 1 : 3,\n        'FromUserName': this.user['UserName'],\n        'ToUserName': to || this.user['UserName'],\n        'ClientMsgId': Date.now()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxstatusnotify,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '手机状态通知失败'\n      throw err\n    })\n  }\n\n  getContact(seq = 0) {\n    return Promise.resolve().then(() => {\n      let params = {\n        // 'pass_ticket': this.PROP.passTicket,\n        'seq': seq,\n        'skey': this.PROP.skey,\n        'r': +new Date()\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetcontact,\n        params: params\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取通讯录失败'\n      throw err\n    })\n  }\n\n  batchGetContact(contacts) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'type': 'ex',\n        'r': +new Date(),\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Count': contacts.length,\n        'List': contacts\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxbatchgetcontact,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n\n        return data.ContactList\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '批量获取联系人失败'\n      throw err\n    })\n  }\n\n  statReport(text) {\n    return Promise.resolve().then(() => {\n      text = text || {\n        'type': '[action-record]',\n        'data': {\n          'actions': [{\n            'type': 'click',\n            'action': '发送框',\n            'time': +new Date()\n          }]\n        }\n      }\n      text = JSON.stringify(text)\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'new',\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Count': 1,\n        'List': [{\n          'Text': text,\n          'Type': 1\n        }]\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxreport,\n        params: params,\n        data: data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '状态报告失败'\n      throw err\n    })\n  }\n\n  syncCheck() {\n    return Promise.resolve().then(() => {\n      let params = {\n        'r': +new Date(),\n        'sid': this.PROP.sid,\n        'uin': this.PROP.uin,\n        'skey': this.PROP.skey,\n        'deviceid': getDeviceID(),\n        'synckey': this.PROP.formatedSyncKey\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_synccheck,\n        params: params\n      }).then(res => {\n        let window = {\n          synccheck: {}\n        }\n\n        try {\n          // eslint-disable-next-line\n          eval(res.data)\n        } catch (ex) {\n          window.synccheck = { retcode: '0', selector: '0' }\n        }\n        if (window.synccheck.retcode == this.CONF.SYNCCHECK_RET_LOGOUT) {\n          throw new AlreadyLogoutError()\n        }\n        assert.equal(window.synccheck.retcode, this.CONF.SYNCCHECK_RET_SUCCESS, res)\n        return window.synccheck.selector\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '同步失败'\n      throw err\n    })\n  }\n\n  sync() {\n    return Promise.resolve().then(() => {\n      let params = {\n        'sid': this.PROP.sid,\n        'skey': this.PROP.skey,\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'SyncKey': this.PROP.syncKey,\n        'rr': ~new Date()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsync,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        if (data.BaseResponse.Ret == this.CONF.SYNCCHECK_RET_LOGOUT) {\n          throw new AlreadyLogoutError()\n        }\n        assert.equal(data.BaseResponse.Ret, 0, res)\n\n        this.updateSyncKey(data)\n        this.PROP.skey = data.SKey || this.PROP.skey\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取新信息失败'\n      throw err\n    })\n  }\n\n  updateSyncKey(data) {\n    if (data.SyncKey) {\n      this.PROP.syncKey = data.SyncKey\n    }\n    if (data.SyncCheckKey) {\n      let synckeylist = []\n      for (let e = data.SyncCheckKey.List, o = 0, n = e.length; n > o; o++) {\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\n      }\n      this.PROP.formatedSyncKey = synckeylist.join('|')\n    } else if (!this.PROP.formatedSyncKey && data.SyncKey) {\n      let synckeylist = []\n      for (let e = data.SyncKey.List, o = 0, n = e.length; n > o; o++) {\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\n      }\n      this.PROP.formatedSyncKey = synckeylist.join('|')\n    }\n  }\n\n  logout() {\n    return Promise.resolve().then(() => {\n      let params = {\n        redirect: 1,\n        type: 0,\n        skey: this.PROP.skey,\n        lang: 'zh_CN'\n      }\n\n      // data加上会出错，不加data也能登出\n      // let data = {\n      //   sid: this.PROP.sid,\n      //   uin: this.PROP.uin\n      // }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxlogout,\n        params: params\n      }).then(res => {\n        return '登出成功'\n      }).catch(err => {\n        debug(err)\n        return '可能登出成功'\n      })\n    })\n  }\n\n  sendText(msg, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_TEXT,\n          'Content': msg,\n          'FromUserName': this.user['UserName'],\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送文本信息失败'\n      throw err\n    })\n  }\n\n  sendEmoticon(id, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'fun': 'sys',\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_EMOTICON,\n          'EmojiFlag': 2,\n          'FromUserName': this.user['UserName'],\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n\n      if (id.indexOf('@') === 0) {\n        data.Msg.MediaId = id\n      } else {\n        data.Msg.EMoticonMd5 = id\n      }\n\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendemoticon,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送表情信息失败'\n      throw err\n    })\n  }\n\n  //根据文件大小切割form\n  getMediaFormStreamData({ name, data, type, mediatype, size, toUserName }) {\n    let uploadMediaRequest = JSON.stringify({\n      BaseRequest: this.getBaseRequest(),\n      ClientMediaId: getClientMsgId(),\n      TotalLen: size,\n      StartPos: 0,\n      DataLen: size,\n      MediaType: 4,\n      UploadType: 2,\n      FromUserName: this.user.UserName,\n      ToUserName: toUserName || this.user.UserName\n    })\n\n    // 小于0.5mb的文件直接返回form\n    if (size <= CHUNK_SIZE) {\n\n      let form = new FormData()\n      form.append('name', name)\n      form.append('type', type)\n      form.append('lastModifiedDate', new Date().toGMTString())\n      form.append('size', size)\n      form.append('mediatype', mediatype)\n      form.append('uploadmediarequest', uploadMediaRequest)\n      form.append('webwx_data_ticket', this.PROP.webwxDataTicket)\n      form.append('pass_ticket', encodeURI(this.PROP.passTicket))\n      form.append('filename', data, {\n        filename: name,\n        contentType: type,\n        knownLength: size\n      })\n\n      return form\n    }\n\n    // 大于0.5mb的文件要切割 chunk \n    const totalChunksNum = Math.ceil(size / CHUNK_SIZE);\n    const totalChunks = data.length\n    const formList = []\n\n    for (let i = 0; i < totalChunksNum; i++) {\n      let startPos = i * CHUNK_SIZE;\n      let endPos = Math.min(size, startPos + CHUNK_SIZE);\n      let chunk = data.slice(startPos, endPos);\n\n      // 创建每个块的 FormData\n      const form = new FormData();\n      form.append('name', name)\n      form.append('type', type)\n      form.append('lastModifiedDate', new Date().toGMTString())\n      form.append('size', size)\n      form.append('mediatype', mediatype)\n      form.append('uploadmediarequest', uploadMediaRequest)\n      form.append('webwx_data_ticket', this.PROP.webwxDataTicket)\n      form.append('pass_ticket', encodeURI(this.PROP.passTicket))\n      form.append('id', 'WU_FILE_0')\n      form.append('chunk', i)\n      form.append('chunks', totalChunksNum)\n      form.append('filename', chunk, {\n        filename: name,\n        contentType: type,\n        knownLength: chunk.length\n      });\n      formList.push({\n        data: form,\n        headers: form.getHeaders()\n      })\n    }\n\n    return formList\n  }\n\n  // file: Stream, Buffer, File, Blob\n  uploadMedia(file, filename, toUserName) {\n    return Promise.resolve().then(() => {\n      let name, type, size, ext, mediatype, data\n      return new Promise((resolve, reject) => {\n        if ((typeof (File) !== 'undefined' && file.constructor == File) ||\n          (typeof (Blob) !== 'undefined' && file.constructor == Blob)) {\n          name = file.name || 'file'\n          type = file.type\n          size = file.size\n          data = file\n          return resolve()\n        } else if (Buffer.isBuffer(file)) {\n          if (!filename) {\n            return reject(new Error('文件名未知'))\n          }\n          name = filename\n          type = mime.lookup(name)\n          size = file.length\n          data = file\n          return resolve()\n        } else if (file.readable) {\n          if (!file.path && !filename) {\n            return reject(new Error('文件名未知'))\n          }\n          name = path.basename(file.path || filename)\n          type = mime.lookup(name)\n          file.pipe(bl((err, buffer) => {\n            if (err) {\n              return reject(err)\n            }\n            size = buffer.length\n            data = buffer\n            return resolve()\n          }))\n        }\n      }).then(() => {\n        ext = name.match(/.*\\.(.*)/)\n        if (ext) {\n          ext = ext[1].toLowerCase()\n        } else {\n          ext = ''\n        }\n\n        switch (ext) {\n          case 'bmp':\n          case 'jpeg':\n          case 'jpg':\n          case 'png':\n            mediatype = 'pic'\n            break\n          case 'mp4':\n            mediatype = 'video'\n            break\n          default:\n            mediatype = 'doc'\n        }\n\n        const formOrFormList = this.getMediaFormStreamData({ name, data, type, mediatype, size, toUserName })\n\n        return new Promise((resolve, reject) => {\n\n          if (isStandardBrowserEnv) {\n            return resolve({\n              data: formOrFormList,\n              headers: {}\n            })\n          } else if (Array.isArray(formOrFormList)) {\n            const bufferList = formOrFormList.reduce((arr, formObj) => {\n              formObj.data.pipe(bl((err, buffer) => {\n                if (err) {\n                  return reject(err)\n                }\n\n                arr.push({ data: buffer, headers: formObj.headers })\n              }))\n              return arr\n            }, [])\n\n            return resolve({ data: bufferList })\n\n          } else {\n            formOrFormList.pipe(bl((err, buffer) => {\n              if (err) {\n                return reject(err)\n              }\n              return resolve({\n                data: buffer,\n                headers: formOrFormList.getHeaders()\n              })\n            }))\n          }\n        })\n      }).then(data => {\n        let params = {\n          f: 'json'\n        }\n\n        //单块文件上传\n        if (!Array.isArray(data.data)) {\n          return this.request({\n            method: 'POST',\n            url: this.CONF.API_webwxuploadmedia,\n            headers: data.headers,\n            params,\n            data: data.data\n          });\n        }\n\n        const bufferList = data.data\n        let currentChunkIndex = 0\n\n        //分块上传逻辑\n        const processChunk = (res) => {\n          if (currentChunkIndex < bufferList.length) {\n            const chunkObj = bufferList[currentChunkIndex]\n            return this.request({\n              method: 'POST',\n              url: this.CONF.API_webwxuploadmedia,\n              headers: chunkObj.headers,\n              params,\n              data: chunkObj.data\n            }).then((res) => {\n              currentChunkIndex++;\n              // 递归处理下一个块\n              return processChunk(res);\n            });\n          } else {\n            // 所有块上传完成\n            return Promise.resolve({data:{\n              MediaId: res.data.MediaId\n            }});\n          }\n        };\n\n        // 开始处理第一个块\n        return processChunk();\n\n      }).then(res => {\n        let data = res.data\n        let mediaId = data.MediaId\n        assert.ok(mediaId, res)\n\n        return {\n          name: name,\n          size: size,\n          ext: ext,\n          mediatype: mediatype,\n          mediaId: mediaId\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '上传媒体文件失败'\n      throw err\n    })\n  }\n\n  sendPic(mediaId, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_IMAGE,\n          'MediaId': mediaId,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsgimg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送图片失败'\n      throw err\n    })\n  }\n\n  sendVideo(mediaId, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_VIDEO,\n          'MediaId': mediaId,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsgvedio,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送视频失败'\n      throw err\n    })\n  }\n\n  sendDoc(mediaId, name, size, ext, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.APPMSGTYPE_ATTACH,\n          'Content': `<appmsg appid='wxeb7ec651dd0aefa9' sdkver=''><title>${name}</title><des></des><action></action><type>6</type><content></content><url></url><lowurl></lowurl><appattach><totallen>${size}</totallen><attachid>${mediaId}</attachid><fileext>${ext}</fileext></appattach><extinfo></extinfo></appmsg>`,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendappmsg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送文件失败'\n      throw err\n    })\n  }\n\n  forwardMsg(msg, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 2,\n        'Msg': {\n          'Type': msg.MsgType,\n          'MediaId': '',\n          'Content': msg.Content.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/^.*:\\n/, ''),\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      let url, pm\n      switch (msg.MsgType) {\n        case this.CONF.MSGTYPE_TEXT:\n          url = this.CONF.API_webwxsendmsg\n          if (msg.SubMsgType === this.CONF.MSGTYPE_LOCATION) {\n            data.Msg.Type = this.CONF.MSGTYPE_LOCATION\n            data.Msg.Content = msg.OriContent.replace(/&lt;/g, '<').replace(/&gt;/g, '>')\n          }\n          break\n        case this.CONF.MSGTYPE_IMAGE:\n          url = this.CONF.API_webwxsendmsgimg\n          break\n        case this.CONF.MSGTYPE_EMOTICON:\n          url = this.CONF.API_webwxsendemoticon\n          params.fun = 'sys'\n          data.Msg.EMoticonMd5 = msg.Content.replace(/^[\\s\\S]*?md5\\s?=\\s?\"(.*?)\"[\\s\\S]*?$/, '$1')\n          if (!data.Msg.EMoticonMd5) {\n            throw new Error('商店表情不能转发')\n          }\n          data.Msg.EmojiFlag = 2\n          data.Scene = 0\n          delete data.Msg.MediaId\n          delete data.Msg.Content\n          break\n        case this.CONF.MSGTYPE_MICROVIDEO:\n        case this.CONF.MSGTYPE_VIDEO:\n          url = this.CONF.API_webwxsendmsgvedio\n          data.Msg.Type = this.CONF.MSGTYPE_VIDEO\n          break\n        case this.CONF.MSGTYPE_APP:\n          url = this.CONF.API_webwxsendappmsg\n          data.Msg.Type = msg.AppMsgType\n          data.Msg.Content = data.Msg.Content.replace(\n            /^[\\s\\S]*?(<appmsg[\\s\\S]*?<attachid>)[\\s\\S]*?(<\\/attachid>[\\s\\S]*?<\\/appmsg>)[\\s\\S]*?$/,\n            `$1${msg.MediaId}$2`)\n          break\n        default:\n          throw new Error('该消息类型不能直接转发')\n      }\n      return this.request({\n        method: 'POST',\n        url: url,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '转发消息失败'\n      throw err\n    })\n  }\n\n  getMsgImg(msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey,\n        type: 'big'\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetmsgimg,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取图片或表情失败'\n      throw err\n    })\n  }\n\n  getVideo(msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetvideo,\n        headers: {\n          'Range': 'bytes=0-'\n        },\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取视频失败'\n      throw err\n    })\n  }\n\n  getVoice(msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetvoice,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取声音失败'\n      throw err\n    })\n  }\n\n  getHeadImg(HeadImgUrl) {\n    return Promise.resolve().then(() => {\n      let url = this.CONF.origin + HeadImgUrl\n      return this.request({\n        method: 'GET',\n        url: url,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取头像失败'\n      throw err\n    })\n  }\n\n  getDoc(FromUserName, MediaId, FileName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        sender: FromUserName,\n        mediaid: MediaId,\n        filename: FileName,\n        fromuser: this.user.UserName,\n        pass_ticket: this.PROP.passTicket,\n        webwx_data_ticket: this.PROP.webwxDataTicket\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxdownloadmedia,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取文件失败'\n      throw err\n    })\n  }\n\n  verifyUser(UserName, Ticket) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Opcode': 3,\n        'VerifyUserListSize': 1,\n        'VerifyUserList': [{\n          'Value': UserName,\n          'VerifyUserTicket': Ticket\n        }],\n        'VerifyContent': '',\n        'SceneListCount': 1,\n        'SceneList': [33],\n        'skey': this.PROP.skey\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxverifyuser,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '通过好友请求失败'\n      throw err\n    })\n  }\n\n  /**\n   * 添加好友\n   * @param UserName 待添加用户的UserName\n   * @param content\n   * @returns {Promise.<TResult>}\n   */\n  addFriend(UserName, content = '我是' + this.user.NickName) {\n    let params = {\n      'pass_ticket': this.PROP.passTicket,\n      'lang': 'zh_CN'\n    }\n\n    let data = {\n      'BaseRequest': this.getBaseRequest(),\n      'Opcode': 2,\n      'VerifyUserListSize': 1,\n      'VerifyUserList': [{\n        'Value': UserName,\n        'VerifyUserTicket': ''\n      }],\n      'VerifyContent': content,\n      'SceneListCount': 1,\n      'SceneList': [33],\n      'skey': this.PROP.skey\n    }\n\n    return this.request({\n      method: 'POST',\n      url: this.CONF.API_webwxverifyuser,\n      params: params,\n      data: data\n    }).then(res => {\n      let data = res.data\n      assert.equal(data.BaseResponse.Ret, 0, res)\n      return data\n    }).catch(err => {\n      debug(err)\n      err.tips = '添加好友失败'\n      throw err\n    })\n  }\n\n  // Topic: Chatroom name\n  // MemberList format:\n  // [\n  //   {\"UserName\":\"@250d8d156ad9f8b068c2e3df3464ecf2\"},\n  //   {\"UserName\":\"@42d725733741de6ac53cbe3738d8dd2e\"}\n  // ]\n  createChatroom(Topic, MemberList) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN',\n        'r': ~new Date()\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        MemberCount: MemberList.length,\n        MemberList: MemberList,\n        Topic: Topic\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxcreatechatroom,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '创建群失败'\n      throw err\n    })\n  }\n\n  // fun: 'addmember' or 'delmember' or 'invitemember'\n  updateChatroom(ChatRoomUserName, MemberList, fun) {\n    return Promise.resolve().then(() => {\n      let params = {\n        fun: fun\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        ChatRoomName: ChatRoomUserName\n      }\n      if (fun === 'addmember') {\n        data.AddMemberList = MemberList.toString()\n      } else if (fun === 'delmember') {\n        data.DelMemberList = MemberList.toString()\n      } else if (fun === 'invitemember') {\n        data.InviteMemberList = MemberList.toString()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxupdatechatroom,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '邀请或踢出群成员失败'\n      throw err\n    })\n  }\n\n  // OP: 1 联系人置顶 0 取消置顶\n  // 若不传RemarkName，则会覆盖以设置的联系人备注名\n  opLog(UserName, OP, RemarkName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        CmdId: 3,\n        OP: OP,\n        RemarkName: RemarkName,\n        UserName: UserName\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxoplog,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '置顶或取消置顶失败'\n      throw err\n    })\n  }\n\n  updateRemarkName(UserName, RemarkName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        CmdId: 2,\n        RemarkName: RemarkName,\n        UserName: UserName\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxoplog,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '设置用户标签失败'\n      throw err\n    })\n  }\n\n  updateChatRoomName(ChatRoomUserName, NewName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'fun': 'modtopic'\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        ChatRoomName: ChatRoomUserName,\n        NewTopic: NewName\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxupdatechatroom,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('更新群名失败')\n    })\n  }\n\n  revokeMsg(msgId, toUserName) {\n    return Promise.resolve().then(() => {\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        SvrMsgId: msgId,\n        ToUserName: toUserName,\n        ClientMsgId: getClientMsgId()\n      }\n      let headers = {}\n      headers['ContentType'] = 'application/json; charset=UTF-8'\n      headers['User-Agent'] = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36'\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxrevokemsg,\n        data: data,\n        headers: headers\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('撤回消息失败')\n    })\n  }\n\n  getBaseRequest() {\n    return {\n      Uin: parseInt(this.PROP.uin),\n      Sid: this.PROP.sid,\n      Skey: this.PROP.skey,\n      DeviceID: getDeviceID()\n    }\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/wechat4u/src/core.js b/node_modules/wechat4u/src/core.js
index 77f2384..79cb2a2 100644
--- a/node_modules/wechat4u/src/core.js
+++ b/node_modules/wechat4u/src/core.js
@@ -14,16 +14,16 @@ import {
 
 const debug = _debug('core')
 export class AlreadyLogoutError extends Error {
-  constructor (message = 'already logout') {
+  constructor(message = 'already logout') {
     super(message)
     // fuck the babel
     this.constructor = AlreadyLogoutError
     this.__proto__ = AlreadyLogoutError.prototype
   }
 }
-
+const CHUNK_SIZE = 0.5 * 1024 * 1024; // 0.5 MB
 export default class WechatCore {
-  constructor (data) {
+  constructor(data) {
     this.PROP = {
       uuid: '',
       uin: '',
@@ -48,7 +48,7 @@ export default class WechatCore {
     })
   }
 
-  get botData () {
+  get botData() {
     return {
       PROP: this.PROP,
       CONF: this.CONF,
@@ -57,13 +57,13 @@ export default class WechatCore {
     }
   }
 
-  set botData (data) {
+  set botData(data) {
     Object.keys(data).forEach(key => {
       Object.assign(this[key], data[key])
     })
   }
 
-  getUUID () {
+  getUUID() {
     return Promise.resolve().then(() => {
       return this.request({
         method: 'POST',
@@ -87,7 +87,7 @@ export default class WechatCore {
     })
   }
 
-  checkLogin () {
+  checkLogin() {
     return Promise.resolve().then(() => {
       let params = {
         'tip': 0,
@@ -122,7 +122,7 @@ export default class WechatCore {
     })
   }
 
-  login () {
+  login() {
     return Promise.resolve().then(() => {
       let headers = {}
       headers['User-Agent'] = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36'
@@ -170,7 +170,7 @@ export default class WechatCore {
     })
   }
 
-  init () {
+  init() {
     return Promise.resolve().then(() => {
       let t = Date.now()
       let r = t / -1579
@@ -204,7 +204,7 @@ export default class WechatCore {
     })
   }
 
-  notifyMobile (to) {
+  notifyMobile(to) {
     return Promise.resolve().then(() => {
       let params = {
         pass_ticket: this.PROP.passTicket,
@@ -233,7 +233,7 @@ export default class WechatCore {
     })
   }
 
-  getContact (seq = 0) {
+  getContact(seq = 0) {
     return Promise.resolve().then(() => {
       let params = {
         // 'pass_ticket': this.PROP.passTicket,
@@ -257,7 +257,7 @@ export default class WechatCore {
     })
   }
 
-  batchGetContact (contacts) {
+  batchGetContact(contacts) {
     return Promise.resolve().then(() => {
       let params = {
         'pass_ticket': this.PROP.passTicket,
@@ -288,7 +288,7 @@ export default class WechatCore {
     })
   }
 
-  statReport (text) {
+  statReport(text) {
     return Promise.resolve().then(() => {
       text = text || {
         'type': '[action-record]',
@@ -327,7 +327,7 @@ export default class WechatCore {
     })
   }
 
-  syncCheck () {
+  syncCheck() {
     return Promise.resolve().then(() => {
       let params = {
         'r': +new Date(),
@@ -365,7 +365,7 @@ export default class WechatCore {
     })
   }
 
-  sync () {
+  sync() {
     return Promise.resolve().then(() => {
       let params = {
         'sid': this.PROP.sid,
@@ -401,7 +401,7 @@ export default class WechatCore {
     })
   }
 
-  updateSyncKey (data) {
+  updateSyncKey(data) {
     if (data.SyncKey) {
       this.PROP.syncKey = data.SyncKey
     }
@@ -420,7 +420,7 @@ export default class WechatCore {
     }
   }
 
-  logout () {
+  logout() {
     return Promise.resolve().then(() => {
       let params = {
         redirect: 1,
@@ -447,7 +447,7 @@ export default class WechatCore {
     })
   }
 
-  sendText (msg, to) {
+  sendText(msg, to) {
     return Promise.resolve().then(() => {
       let params = {
         'pass_ticket': this.PROP.passTicket,
@@ -483,7 +483,7 @@ export default class WechatCore {
     })
   }
 
-  sendEmoticon (id, to) {
+  sendEmoticon(id, to) {
     return Promise.resolve().then(() => {
       let params = {
         'fun': 'sys',
@@ -527,8 +527,80 @@ export default class WechatCore {
     })
   }
 
+  //根据文件大小切割form
+  getMediaFormStreamData({ name, data, type, mediatype, size, toUserName }) {
+    let uploadMediaRequest = JSON.stringify({
+      BaseRequest: this.getBaseRequest(),
+      ClientMediaId: getClientMsgId(),
+      TotalLen: size,
+      StartPos: 0,
+      DataLen: size,
+      MediaType: 4,
+      UploadType: 2,
+      FromUserName: this.user.UserName,
+      ToUserName: toUserName || this.user.UserName
+    })
+
+    // 小于0.5mb的文件直接返回form
+    if (size <= CHUNK_SIZE) {
+
+      let form = new FormData()
+      form.append('name', name)
+      form.append('type', type)
+      form.append('lastModifiedDate', new Date().toGMTString())
+      form.append('size', size)
+      form.append('mediatype', mediatype)
+      form.append('uploadmediarequest', uploadMediaRequest)
+      form.append('webwx_data_ticket', this.PROP.webwxDataTicket)
+      form.append('pass_ticket', encodeURI(this.PROP.passTicket))
+      form.append('filename', data, {
+        filename: name,
+        contentType: type,
+        knownLength: size
+      })
+
+      return form
+    }
+
+    // 大于0.5mb的文件要切割 chunk 
+    const totalChunksNum = Math.ceil(size / CHUNK_SIZE);
+    const totalChunks = data.length
+    const formList = []
+
+    for (let i = 0; i < totalChunksNum; i++) {
+      let startPos = i * CHUNK_SIZE;
+      let endPos = Math.min(size, startPos + CHUNK_SIZE);
+      let chunk = data.slice(startPos, endPos);
+
+      // 创建每个块的 FormData
+      const form = new FormData();
+      form.append('name', name)
+      form.append('type', type)
+      form.append('lastModifiedDate', new Date().toGMTString())
+      form.append('size', size)
+      form.append('mediatype', mediatype)
+      form.append('uploadmediarequest', uploadMediaRequest)
+      form.append('webwx_data_ticket', this.PROP.webwxDataTicket)
+      form.append('pass_ticket', encodeURI(this.PROP.passTicket))
+      form.append('id', 'WU_FILE_0')
+      form.append('chunk', i)
+      form.append('chunks', totalChunksNum)
+      form.append('filename', chunk, {
+        filename: name,
+        contentType: type,
+        knownLength: chunk.length
+      });
+      formList.push({
+        data: form,
+        headers: form.getHeaders()
+      })
+    }
+
+    return formList
+  }
+
   // file: Stream, Buffer, File, Blob
-  uploadMedia (file, filename, toUserName) {
+  uploadMedia(file, filename, toUserName) {
     return Promise.resolve().then(() => {
       let name, type, size, ext, mediatype, data
       return new Promise((resolve, reject) => {
@@ -585,48 +657,37 @@ export default class WechatCore {
             mediatype = 'doc'
         }
 
-        let clientMsgId = getClientMsgId()
-
-        let uploadMediaRequest = JSON.stringify({
-          BaseRequest: this.getBaseRequest(),
-          ClientMediaId: clientMsgId,
-          TotalLen: size,
-          StartPos: 0,
-          DataLen: size,
-          MediaType: 4,
-          UploadType: 2,
-          FromUserName: this.user.UserName,
-          ToUserName: toUserName || this.user.UserName
-        })
+        const formOrFormList = this.getMediaFormStreamData({ name, data, type, mediatype, size, toUserName })
 
-        let form = new FormData()
-        form.append('name', name)
-        form.append('type', type)
-        form.append('lastModifiedDate', new Date().toGMTString())
-        form.append('size', size)
-        form.append('mediatype', mediatype)
-        form.append('uploadmediarequest', uploadMediaRequest)
-        form.append('webwx_data_ticket', this.PROP.webwxDataTicket)
-        form.append('pass_ticket', encodeURI(this.PROP.passTicket))
-        form.append('filename', data, {
-          filename: name,
-          contentType: type,
-          knownLength: size
-        })
         return new Promise((resolve, reject) => {
+
           if (isStandardBrowserEnv) {
             return resolve({
-              data: form,
+              data: formOrFormList,
               headers: {}
             })
+          } else if (Array.isArray(formOrFormList)) {
+            const bufferList = formOrFormList.reduce((arr, formObj) => {
+              formObj.data.pipe(bl((err, buffer) => {
+                if (err) {
+                  return reject(err)
+                }
+
+                arr.push({ data: buffer, headers: formObj.headers })
+              }))
+              return arr
+            }, [])
+
+            return resolve({ data: bufferList })
+
           } else {
-            form.pipe(bl((err, buffer) => {
+            formOrFormList.pipe(bl((err, buffer) => {
               if (err) {
                 return reject(err)
               }
               return resolve({
                 data: buffer,
-                headers: form.getHeaders()
+                headers: formOrFormList.getHeaders()
               })
             }))
           }
@@ -636,13 +697,46 @@ export default class WechatCore {
           f: 'json'
         }
 
-        return this.request({
-          method: 'POST',
-          url: this.CONF.API_webwxuploadmedia,
-          headers: data.headers,
-          params: params,
-          data: data.data
-        })
+        //单块文件上传
+        if (!Array.isArray(data.data)) {
+          return this.request({
+            method: 'POST',
+            url: this.CONF.API_webwxuploadmedia,
+            headers: data.headers,
+            params,
+            data: data.data
+          });
+        }
+
+        const bufferList = data.data
+        let currentChunkIndex = 0
+
+        //分块上传逻辑
+        const processChunk = (res) => {
+          if (currentChunkIndex < bufferList.length) {
+            const chunkObj = bufferList[currentChunkIndex]
+            return this.request({
+              method: 'POST',
+              url: this.CONF.API_webwxuploadmedia,
+              headers: chunkObj.headers,
+              params,
+              data: chunkObj.data
+            }).then((res) => {
+              currentChunkIndex++;
+              // 递归处理下一个块
+              return processChunk(res);
+            });
+          } else {
+            // 所有块上传完成
+            return Promise.resolve({data:{
+              MediaId: res.data.MediaId
+            }});
+          }
+        };
+
+        // 开始处理第一个块
+        return processChunk();
+
       }).then(res => {
         let data = res.data
         let mediaId = data.MediaId
@@ -663,7 +757,7 @@ export default class WechatCore {
     })
   }
 
-  sendPic (mediaId, to) {
+  sendPic(mediaId, to) {
     return Promise.resolve().then(() => {
       let params = {
         'pass_ticket': this.PROP.passTicket,
@@ -701,7 +795,7 @@ export default class WechatCore {
     })
   }
 
-  sendVideo (mediaId, to) {
+  sendVideo(mediaId, to) {
     return Promise.resolve().then(() => {
       let params = {
         'pass_ticket': this.PROP.passTicket,
@@ -739,7 +833,7 @@ export default class WechatCore {
     })
   }
 
-  sendDoc (mediaId, name, size, ext, to) {
+  sendDoc(mediaId, name, size, ext, to) {
     return Promise.resolve().then(() => {
       let params = {
         'pass_ticket': this.PROP.passTicket,
@@ -777,7 +871,7 @@ export default class WechatCore {
     })
   }
 
-  forwardMsg (msg, to) {
+  forwardMsg(msg, to) {
     return Promise.resolve().then(() => {
       let params = {
         'pass_ticket': this.PROP.passTicket,
@@ -855,7 +949,7 @@ export default class WechatCore {
     })
   }
 
-  getMsgImg (msgId) {
+  getMsgImg(msgId) {
     return Promise.resolve().then(() => {
       let params = {
         MsgID: msgId,
@@ -881,7 +975,7 @@ export default class WechatCore {
     })
   }
 
-  getVideo (msgId) {
+  getVideo(msgId) {
     return Promise.resolve().then(() => {
       let params = {
         MsgID: msgId,
@@ -909,7 +1003,7 @@ export default class WechatCore {
     })
   }
 
-  getVoice (msgId) {
+  getVoice(msgId) {
     return Promise.resolve().then(() => {
       let params = {
         MsgID: msgId,
@@ -934,7 +1028,7 @@ export default class WechatCore {
     })
   }
 
-  getHeadImg (HeadImgUrl) {
+  getHeadImg(HeadImgUrl) {
     return Promise.resolve().then(() => {
       let url = this.CONF.origin + HeadImgUrl
       return this.request({
@@ -954,7 +1048,7 @@ export default class WechatCore {
     })
   }
 
-  getDoc (FromUserName, MediaId, FileName) {
+  getDoc(FromUserName, MediaId, FileName) {
     return Promise.resolve().then(() => {
       let params = {
         sender: FromUserName,
@@ -982,7 +1076,7 @@ export default class WechatCore {
     })
   }
 
-  verifyUser (UserName, Ticket) {
+  verifyUser(UserName, Ticket) {
     return Promise.resolve().then(() => {
       let params = {
         'pass_ticket': this.PROP.passTicket,
@@ -1024,7 +1118,7 @@ export default class WechatCore {
    * @param content
    * @returns {Promise.<TResult>}
    */
-  addFriend (UserName, content = '我是' + this.user.NickName) {
+  addFriend(UserName, content = '我是' + this.user.NickName) {
     let params = {
       'pass_ticket': this.PROP.passTicket,
       'lang': 'zh_CN'
@@ -1066,7 +1160,7 @@ export default class WechatCore {
   //   {"UserName":"@250d8d156ad9f8b068c2e3df3464ecf2"},
   //   {"UserName":"@42d725733741de6ac53cbe3738d8dd2e"}
   // ]
-  createChatroom (Topic, MemberList) {
+  createChatroom(Topic, MemberList) {
     return Promise.resolve().then(() => {
       let params = {
         'pass_ticket': this.PROP.passTicket,
@@ -1097,7 +1191,7 @@ export default class WechatCore {
   }
 
   // fun: 'addmember' or 'delmember' or 'invitemember'
-  updateChatroom (ChatRoomUserName, MemberList, fun) {
+  updateChatroom(ChatRoomUserName, MemberList, fun) {
     return Promise.resolve().then(() => {
       let params = {
         fun: fun
@@ -1132,7 +1226,7 @@ export default class WechatCore {
 
   // OP: 1 联系人置顶 0 取消置顶
   // 若不传RemarkName，则会覆盖以设置的联系人备注名
-  opLog (UserName, OP, RemarkName) {
+  opLog(UserName, OP, RemarkName) {
     return Promise.resolve().then(() => {
       let params = {
         pass_ticket: this.PROP.passTicket
@@ -1161,7 +1255,7 @@ export default class WechatCore {
     })
   }
 
-  updateRemarkName (UserName, RemarkName) {
+  updateRemarkName(UserName, RemarkName) {
     return Promise.resolve().then(() => {
       let params = {
         pass_ticket: this.PROP.passTicket,
@@ -1190,7 +1284,7 @@ export default class WechatCore {
     })
   }
 
-  updateChatRoomName (ChatRoomUserName, NewName) {
+  updateChatRoomName(ChatRoomUserName, NewName) {
     return Promise.resolve().then(() => {
       let params = {
         'fun': 'modtopic'
@@ -1215,7 +1309,7 @@ export default class WechatCore {
     })
   }
 
-  revokeMsg (msgId, toUserName) {
+  revokeMsg(msgId, toUserName) {
     return Promise.resolve().then(() => {
       let data = {
         BaseRequest: this.getBaseRequest(),
@@ -1242,7 +1336,7 @@ export default class WechatCore {
     })
   }
 
-  getBaseRequest () {
+  getBaseRequest() {
     return {
       Uin: parseInt(this.PROP.uin),
       Sid: this.PROP.sid,
