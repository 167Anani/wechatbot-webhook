name: UPDATE CLI Package
on:
  push:
    branches:
      - main

jobs:
  update-cli-version:
    if: "${{contains(github.event.head_commit.message, 'chore(main): release')}}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Create new branch
        run: |
          ROOT_VERSION=$(jq -r '.version' package.json)
          NEW_BRANCH="npm-pull-request-of-v${ROOT_VERSION}"
          echo "NEW_BRANCH=$NEW_BRANCH" >> $GITHUB_ENV
          echo "NEW_VERSION=$ROOT_VERSION" >> $GITHUB_ENV
          git checkout -b $NEW_BRANCH

      - name: Update CLI package.json
        run: |
          ROOT_VERSION=$(jq -r '.version' package.json)
          jq ".version = \"$ROOT_VERSION\"" packages/cli/package.json > temp.json && mv temp.json packages/cli/package.json
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions[bot]"
          git add packages/cli/package.json
          git commit -m "chore(cli): sync package version to cli"
          git push --set-upstream origin ${{ env.NEW_BRANCH }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(cli): release npm version of ${{ env.NEW_VERSION }}"
          title: "Publish npm v${{ env.NEW_VERSION }}"
          body: "Update npm package version to ${{ env.NEW_VERSION }}"
          branch: "npm-pull-request-of-v${{ env.NEW_VERSION }}"
          base: main
          labels: release
        id: cpr
      
  publish-cli:
    needs: update-cli-version
    if: "${{contains(github.event.head_commit.message, 'chore(cli): release')}}"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # 设置 Node.js 环境
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    # 安装 pnpm
    - name: Install pnpm
      run: npm install -g pnpm

    # 安装依赖
    - name: Install Dependencies
      run: pnpm install
      working-directory: ./packages/cli

    # 构建（如果需要）
    - name: Build package
      run: pnpm run build
      working-directory: ./packages/cli

    # 发布到 npm
    - name: Publish to npm
      run: pnpm publish --access public
      working-directory: ./packages/cli
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_SECRET }}